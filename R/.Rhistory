formula = 'Sepal.Length~.'
data = iris
head(data)
X_design <- model.matrix(formula, data)
svd_object = svd(X_design)
X_design <- model.matrix(formula, data)
?model.matrix
X_design <- model.matrix(formula, iris)
formula
formula = as.formula(formula)
X_design <- model.matrix(formula, iris)
svd_object = svd(X_design)
svd_object
U <- svd_object["u"]
V <- svd_object["v"]
Sinv <- diag(1 / svd_object["d"])
svd_object["d"]
dim(X_design)
Sinv <- diag(1 / unlist(svd_object["d"]))
Sinv
y <- unlist(data[all.vars(formula)[1]])
head(y)
class(y)
pseudo_inv <- V %*% Sinv %*% t(U)
class(V)
V <- unlist(svd_object["v"])
class(V)
dim(V)
V
class(as.matrix(svd_object["v"]))
V <- as.matrix(svd_object["v"])
V
dim(data)
dim(X_design)
V <- matrix(unlist(svd_object["v"]), ncol(X_design))
dim(V)
U <- svd_object[["u"]]
dim(U)
svd_object = svd(X_design)
U <- svd_object[["u"]]
V <- svd_object[["v"]]
Sinv <- diag(1 / svd_object[["d"]])
dim(U)
dim(v)
dim(V)
dim(Sinv)
y <- unlist(data[all.vars(formula)[1]])
pseudo_inv <- V %*% Sinv %*% t(U)
beta_hat <- pseudo_inv %*% y
beta_hat
?backsolve
